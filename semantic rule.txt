关于词法分析器设计的简要说明
组件：
1 LA1的栈状态机fsm，
2 为符号和词进行内部编码/分类的TypeSchema
3 对符号和词进行匹配的PatterRecognizer

状态机流程：
fsm吃进一个符号，调用PatterRecognizer进行识别，识别结果为内部整数编码：id
fsm再通过TypeSchema获得该id对应的输入符号的类型，
现在实现的有以下类型：
1 标点符号类型，即qwerty键盘上除下划线_之外的所有非字母/数字符号
2 字母类型，a-zA-Z_
3 数字类型，0-9 考虑到unrealscript作为高级语言可能不太需要识别非十进制数字
4 分隔符类型， 即\n和\s，以及EOF

fsm根据符号类型采取不同的操作：
1 标点类型
	1.1 /*和// 
		进入注释处理
		1.1.1 /*
			push注释起始位置，向右查找(*/|EOF)，找到后pop，截取子串，生成token:id, pos, content
		1.1.2 //
			push注释起始位置，向右查找(\n|EOF)，找到后pop，截取子串，生成token:id, pos, content
	1.2 双引号"
		进入字符串处理, push字符串起始位置，向右查找("|\n), pop，截取子串， 生成token:id, pos, content
	1.3 其他
		直接生成token:id, pos
2 分隔符类型
	2.1 (\n|\s)
		直接丢弃
	2.2 EOF
		fsm停机
3 字母类型
	借助栈确定字符串起点和终点，截取子串
	将截取的字符串输入PatternRecognizer，获得id，生成token并加入tokenStream 该id有两种可能：保留字和标识符
	3.1 对于保留字， token应包含如下信息
		id, pos,
	3.2 对于标识符， token应包含如下信息
		id, pos, content即标识符内容
	
4 数字类型
	4.1 0-9
		push起始位置，向右查找
		4.1.1 .(0-9)+
			浮点数 token:id, pos, content(float)
		4.1.2 \b
			整数 token:id, pos, content(int)
		4.1.3 字母
			无效标识符 token:id, pos, content

注意：
保留字类型的token都是有pattern可匹配的，固定长度
而comment，string，digit，identifier及invalid_identifier类型的token是无pattern的，它们是fsm根据语义提取出来的，长度不定，通过识别起始/结束位置进行截取获得



TypeSchema主要feature：
 i)可配置的保留词表
ii)保留词可分类，扩展

直接使用TypeSchema进行pattern识别等价于字符串遍历，效率为百万级token每秒
PatternRecognizer则根据TypeSchema的pattern生成pattern map，将字符串遍历转换为红黑树查找，效率应高一些，具体待测。

关于pattern map, 由于TypeSchema包含两部分内容：单字符和保留字，而这两部分的识别过程在状态机逻辑里是分离的，所以pattern map也是独立的两个map：

map<char, typeid>和map<string, typeid>

只有状态3.1会进行保留字识别
其他状态只识别单字或多字符的起始/终止位置



[keyword::state]
state
auto
GotoState

[keyword::blockCtrl]
if else 
switch case break default 
while
do until
for 
continue 
goto
foreach

[keyword::datatype]
[datatype::primitive]
byte int bool float string constant enumeration

[datatype::aggregate]
array struct *[]

[datatype::unreal_extended]
name
*obj_ref
delegate

[keyword::specifier]

[specifier::class http://udn.epicgames.com/Three/UnrealScriptClasses.html]
native nativereplication dependson abstract ...

[specifier::function http://udn.epicgames.com/Three/UnrealScriptVariables.html]
config globalconfig localized const ...

[specifier::function_param http://udn.epicgames.com/Three/UnrealScriptVariables.html]
out
coerce
optional

[specifier::var]

[specifier::struct]
atomic
atomicwhencooked
immutable
immutablewhencooked
strictconfig

[specifier::]

native coerce const deprecated auto abstract collapsecategories

[keyword::decl]
class extends enum struct state
array
byte int float name
cpptext